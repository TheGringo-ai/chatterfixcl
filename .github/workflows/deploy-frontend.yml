# ChatterFix CMMS Frontend Deployment
# Phase 3: CI/CD - Frontend â†’ Netlify

name: Deploy Frontend
on:
  push:
    branches: [ main ]
    paths: [ 'src/**', 'public/**', 'package.json', '.github/workflows/deploy-frontend.yml' ]
  workflow_dispatch:

permissions:
  contents: read
  deployments: write

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm install
      
      - name: Run linting
        run: npm run lint || true  # Don't fail build on lint warnings
      
      - name: Run type checking
        run: npm run type-check || true  # Don't fail build on type warnings
      
      - name: Build application
        run: |
          # Set environment variables for production build
          export VITE_API_BASE="${{ secrets.VITE_API_BASE }}"
          export VITE_PUSH_PUBLIC_KEY="${{ secrets.PUSH_VAPID_PUBLIC }}"
          export VITE_APP_VERSION="$(date +%Y%m%d-%H%M%S)-${GITHUB_SHA:0:7}"
          export VITE_ENVIRONMENT="production"
          export VITE_ENABLE_PWA="true"
          export VITE_ENABLE_OFFLINE="true"
          export VITE_ENABLE_PUSH_NOTIFICATIONS="true"
          
          npm run build
      
      - name: Optimize build
        run: |
          # Add PWA optimizations
          echo "Optimizing PWA build..."
          
          # Ensure service worker is in the right place
          cp public/service-worker.js dist/service-worker.js || true
          
          # Add cache headers configuration for Netlify
          cat > dist/_headers << EOF
          /*
            X-Frame-Options: DENY
            X-Content-Type-Options: nosniff
            Referrer-Policy: strict-origin-when-cross-origin
            
          /static/*
            Cache-Control: public, max-age=31536000, immutable
            
          /*.js
            Cache-Control: public, max-age=31536000, immutable
            
          /*.css
            Cache-Control: public, max-age=31536000, immutable
            
          /service-worker.js
            Cache-Control: no-cache
            
          /manifest.json
            Cache-Control: public, max-age=86400
          EOF
          
          # Add redirects for SPA
          cat > dist/_redirects << EOF
          /api/* ${{ secrets.VITE_API_BASE }}/:splat 200
          /* /index.html 200
          EOF
      
      - name: Deploy to Netlify
        uses: nwtgck/actions-netlify@v3.0
        with:
          publish-dir: './dist'
          production-branch: main
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: "Deploy from GitHub Actions - ${{ github.event.head_commit.message }}"
          enable-pull-request-comment: false
          enable-commit-comment: true
          overwrites-pull-request-comment: true
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
      
      - name: Verify PWA deployment
        run: |
          # Wait for deployment to be ready
          sleep 60
          
          SITE_URL="https://chatterfix.netlify.app"
          echo "Verifying deployment at: $SITE_URL"
          
          # Check if site is accessible
          curl -f "$SITE_URL" -o /dev/null || exit 1
          
          # Check if manifest.json is accessible
          curl -f "$SITE_URL/manifest.json" -o /dev/null || exit 1
          
          # Check if service worker is accessible
          curl -f "$SITE_URL/service-worker.js" -o /dev/null || exit 1
          
          echo "âœ… PWA deployment verification successful"
      
      - name: Run Lighthouse CI (PWA audit)
        uses: treosh/lighthouse-ci-action@v10
        with:
          urls: |
            https://chatterfix.netlify.app
          configPath: './.lighthouserc.json'
          uploadArtifacts: true
          temporaryPublicStorage: true
        continue-on-error: true
      
      - name: Notify deployment
        uses: actions/github-script@v7
        if: always()
        with:
          script: |
            const deployment = await github.rest.repos.createDeployment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: context.sha,
              environment: 'production',
              description: 'Frontend deployment to Netlify'
            });
            
            await github.rest.repos.createDeploymentStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              deployment_id: deployment.data.id,
              state: '${{ job.status }}' === 'success' ? 'success' : 'failure',
              description: '${{ job.status }}' === 'success' ? 'PWA deployment successful' : 'PWA deployment failed',
              environment_url: 'https://chatterfix.netlify.app'
            });